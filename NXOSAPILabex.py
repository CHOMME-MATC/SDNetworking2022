'''
Date: 2/21/2022
Author: Chance Homme

This code uses python3 template generated from the NEXOS API for the "show version" command
and creates a main code using the template to parse output from the "show version" command.


'''


import requests # import statements importing the json and requests library respectively
import json

def requestShowVer(): # function that makes the API call to the dist_sw01 cisco device

    """
    Modify these please
    """
    switchuser='cisco' # switchuser contains the string value of the username for the switch user account
    switchpassword='cisco' # switchpassword contains the string value of the password for the switch user account

    url='https://10.10.20.177/ins' # url contains the string value of the destination url for the api request 
    myheaders={'content-type':'application/json-rpc'} # my headers, payload, and response were auto generated by the NEXOS api to create an API call
                                                      # that issues the show version command on the switch using the destination url
    payload=[
      {
        "jsonrpc": "2.0",
        "method": "cli",
        "params": {
          "cmd": "show version",
          "version": 1
        },
        "id": 1
      }
    ]
    
    response = requests.post(url,data=json.dumps(payload), verify = False, headers=myheaders,auth=(switchuser,switchpassword)).json() 
    # response was edited to include verify = False to circumvent the default certification validation

    commandDict = response['result']['body'] # variable that parses response of command down to just the dictionary of the response text

    return commandDict # commandDict is returned to main for further use

#main code

shVer = requestShowVer() # variable that calls the function and contains the returned response variable once function is ran



hostname = shVer['host_name'] # hostname contains the hostname of the device
memory = str(shVer['memory']) # memory contains the ammount of memory on the device and is represented as a string
memoryType = shVer['mem_type'] # memoryType contains the type of data the memory integer is represented in

print('The devices hostname is: ' + hostname + ' ' + 'The memory of the device is: ' + memory+memoryType)

# print statement that displays the hostname of the device as well as the memory of the device with the appropiate data type suffix





